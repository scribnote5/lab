spring:
  jpa:
    open-in-view: false
  devtools:
    # 프론트 수정 사항을 자동으로 반영한다.
    livereload:
      enabled: true
    restart:
      enabled: true
  data:
    web:
      pageable:
        default-page-size: 15
module:
  name: module-app-web

title: ESLAB

server:
  servlet:
    session:
      cookie:
        name: module-app-web
google:
  map:
    embeded:
      api:
        url: https://www.google.com/maps/embed/v1/place?key=AIzaSyB-r0uWaGG6vgoPkJ0WHREGu9AT_f_V7gM&q=%EB%8C%80%EC%A0%84%EA%B4%91%EC%97%AD%EC%8B%9C+%EA%B6%81%EB%8F%99+%EC%B6%A9%EB%82%A8%EB%8C%80%ED%95%99%EA%B5%90+%EA%B3%B5%EA%B3%BC%EB%8C%80%ED%95%995%ED%98%B8%EA%B4%80%2C%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD&zoom=17
email:
  sender: eslab533
  password: eslabeslab533
font-awesome:
  address: 6b69fd4398.js
---
spring:
  profiles: test
  thymeleaf:
    cache: false
  jpa:
    hibernate:
      ddl-auto: create
  h2:
    console:
      enabled: true
      path: /console
  datasource:
    # test는 DB 이름으로서 생성한 DB 이름으로 변경 필요, 메인 메모리를 저장 장소로 사용한다.(휘발성)
    url: jdbc:h2:mem:test;MODE=mysql;
    # test는 DB 이름으로서 생성한 DB 이름으로 변경 필요, File을 저장 장소로 사용한다.(비휘발성)
    # url: jdbc:h2:file:~/data/h2/testdb;MODE=MySQL
    # 개인 아이디로 변경 필요하다.project ul li.
    username: scribnote5
    # 개인 비밀번호로 변경 필요하다.
    password: 123123123
    driver-class-name: org.h2.Driver
    # spring boot 2.x에서는 connection pool로 HikariCP를 사용한다.
    # HikariCP 설정은 default value 값을 사용하였으며, HikariCP에서 추천하는 mysql 설정을 다음과 같이 적용하였다.
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
server:
  port: 8080
module-app-web:
  address: http://localhost:8080
module-app-api:
  address: http://localhost:8081
module-app-admin:
  address: http://localhost:8082
---
spring:
  profiles: local
  thymeleaf:
    cache: false
  #  jpa:
  #    hibernate:
  #      ddl-auto: create
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    # test는 DB 이름으로서 생성한 DB 이름으로 변경 필요하다.
    url: jdbc:mariadb://127.0.0.1:3306/lab
    # 개인 아이디로 변경 필요하다.
    username: scribnote5
    # 개인 비밀번호로 변경 필요하다.
    password: 123123123
    # spring boot 2.x에서는 connection pool로 HikariCP를 사용한다.
    # HikariCP 설정은 default value 값을 사용하였으며, HikariCP에서 추천하는 mysql 설정을 다음과 같이 적용하였다.
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
server:
  port: 8080
module-app-web:
  address: http://localhost:8080
module-app-api:
  address: http://localhost:8081
module-app-admin:
  address: http://localhost:8082
---
spring:
  profiles: dev
  thymeleaf:
    cache: true
  #  jpa:
  #    hibernate:
  #      ddl-auto: create
  datasource:
    # test는 DB 이름으로서 생성한 DB 이름으로 변경 필요하다.
    url: jdbc:mariadb://127.0.0.1:3306/lab
    # 개인 아이디로 변경 필요하다.
    username: scribnote5
    # 개인 비밀번호로 변경 필요하다.
    password: 123123123
    driver-class-name: org.mariadb.jdbc.Driver
    # spring boot 2.x에서는 connection pool로 HikariCP를 사용한다.
    # HikariCP 설정은 default value 값을 사용하였으며, HikariCP에서 추천하는 mysql 설정을 다음과 같이 적용하였다.
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
server:
  port: 8080
module-app-web:
  address: http://203.234.19.85:8080
module-app-api:
  address: http://203.234.19.85:8081
module-app-admin:
  address: http://203.234.19.85:8082
---
spring:
  profiles: prod
  thymeleaf:
    cache: true
  #  jpa:
  #    hibernate:
  #      ddl-auto: create
  datasource:
    # test는 DB 이름으로서 생성한 DB 이름으로 변경 필요하다.
    url: jdbc:mariadb://127.0.0.1:3306/lab
    # 개인 아이디로 변경 필요하다.
    username: eslab533
    # 개인 비밀번호로 변경 필요하다.
    password: eslabeslab533
    driver-class-name: org.mariadb.jdbc.Driver
    # spring boot 2.x에서는 connection pool로 HikariCP를 사용한다.
    # HikariCP 설정은 default value 값을 사용하였으며, HikariCP에서 추천하는 mysql 설정을 다음과 같이 적용하였다.
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
server:
  port: 8080
module-app-web:
  address: https://eslab.cnu.ac.kr
module-app-api:
  address: https://eslab.cnu.ac.kr:8083
module-app-admin:
  address: http://eslab.cnu.ac.kr:8082